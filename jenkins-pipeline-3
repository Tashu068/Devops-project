pipeline {
    agent any
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Build') {
            steps {
                sh 'pip install -r requirements.txt'
            }
        }
        
        stage('Test') {
            steps {
                sh 'python manage.py test'
            }
               }
        
        stage('Deploy') {
            environment {
                AWS_ACCESS_KEY_ID = credentials('aws-access-key')
                AWS_SECRET_ACCESS_KEY = credentials('aws-secret-key')
            }
            
            steps {
                withCredentials([
                    string(credentialsId: 'ec2-private-key', variable: 'EC2_PRIVATE_KEY')
                ]) {
                    sh 'aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID'
                    sh 'aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY'
                    sh 'aws configure set default.region us-east-1'  // Replace with your desired region
                       sh 'aws ec2 create-key-pair --key-name my-key --query "KeyMaterial" --output text > my-key.pem'
                    sh 'chmod 400 my-key.pem'
                    
                    sh 'aws ec2 run-instances --image-id ami-0123456789abcdef0 --instance-type t2.micro --key-name my-key'
                    
                    sleep 60  // Wait for the instance to start
                    
                    sh 'scp -i my-key.pem -r . ec2-user@<EC2_INSTANCE_PUBLIC_IP>:~/app'
                    
                    sh 'ssh -i my-key.pem ec2-user@<EC2_INSTANCE_PUBLIC_IP> "cd app && python manage.py migrate"'
                    sh 'ssh -i my-key.pem ec2-user@<EC2_INSTANCE_PUBLIC_IP> "sudo systemctl restart apache2"'
                }
            }
        }
    }
}